@model Sipl.Models.NetUserViewModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>NetUserViewModel</h4>
    <hr />
    @*Jquery*@

    <script src="~/Scripts/JavaScript-Google.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {

            jQuery("#ddlCountry").change(function () {
                jQuery("#ddlStateData").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("getstate")',

                    dataType: 'json',

                    data: { id: $("#ddlCountry").val() },


                    success: function (states) {


                        $.each(states, function (i, state) {
                            $("#ddlStateData").append('<option value="' + state.Value + '">' +
                                state.Text + '</option>');

                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                return false;
            });




            $("#ddlStateData").change(function () {
                $("#ddlCity").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("getcity")',
                    dataType: 'json',
                    data: { id: $("#ddlStateData").val() },
                    success: function (city) {

                        $.each(city, function (i, city) {
                            $("#ddlCity").append('<option value="'
                                + city.Value + '">'
                                + city.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed.' + ex);
                    }
                });
                return false;
            });
        });
    </script>

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.RoleId, Model.Role)
            @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Course, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CourseId, Model.Course)
            @Html.ValidationMessageFor(model => model.Course, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.RadioButtonFor(model => model.Gender, "M")
            <span>Male</span>

            @Html.RadioButtonFor(model => model.Gender, "F")
            <span>FeMale</span>
            @Html.RadioButtonFor(model => model.Gender, "O")
            <span>Others</span>
            @Html.ValidationMessageFor(model => model.Gender)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
        </div>
    </div>
    <hr>
    <div class="form-group">
        @Html.LabelFor(model => model.CurrentAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.CurrentAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CurrentAddress, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PermanantAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.PermanantAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PermanantAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    @*Country*@
    <div class="form-group">
        @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CountryId, ViewBag.country as IEnumerable<SelectListItem>,
               htmlAttributes: new { @class = "control-label col-md-2",@id= "ddlCountry" })

            @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })

        </div>
    </div>

    @*States*@
    <div class="form-group">
        @Html.LabelFor(model => model.StateId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.DropDownList("ddlStateData", new SelectList(ViewBag.State, "Value", "Text"),
                "--Select State--", new { style = "width:200px" })*@
            @Html.DropDownListFor(model => model.StateId, ViewBag.State as IEnumerable<SelectListItem>,
         htmlAttributes: new { @class = "control-label col-md-2",@id= "ddlStateData" })
            @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })

        </div>
    </div>

    @*cityID*@
    <div class="form-group">
        @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.DropDownList("ddlCity", new SelectList(ViewBag.City, "Value", "Text"),
                "--Select City--", new { style = "width:200px" })*@
            @Html.DropDownListFor(model => model.CityId, ViewBag.State as IEnumerable<SelectListItem>,
         htmlAttributes: new { @class = "control-label col-md-2",@id= "ddlCity" })


            @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })

        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.Partial("_BacktoListButtonPartial", "Index")
</div>
